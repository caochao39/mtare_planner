// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/data/jobshop_scheduling.proto

#ifndef PROTOBUF_INCLUDED_ortools_2fdata_2fjobshop_5fscheduling_2eproto
#define PROTOBUF_INCLUDED_ortools_2fdata_2fjobshop_5fscheduling_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ortools_2fdata_2fjobshop_5fscheduling_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_ortools_2fdata_2fjobshop_5fscheduling_2eproto();
namespace operations_research {
namespace data {
namespace jssp {
class AssignedJob;
class AssignedJobDefaultTypeInternal;
extern AssignedJobDefaultTypeInternal _AssignedJob_default_instance_;
class AssignedTask;
class AssignedTaskDefaultTypeInternal;
extern AssignedTaskDefaultTypeInternal _AssignedTask_default_instance_;
class Job;
class JobDefaultTypeInternal;
extern JobDefaultTypeInternal _Job_default_instance_;
class JobPrecedence;
class JobPrecedenceDefaultTypeInternal;
extern JobPrecedenceDefaultTypeInternal _JobPrecedence_default_instance_;
class JsspInputProblem;
class JsspInputProblemDefaultTypeInternal;
extern JsspInputProblemDefaultTypeInternal _JsspInputProblem_default_instance_;
class JsspOutputSolution;
class JsspOutputSolutionDefaultTypeInternal;
extern JsspOutputSolutionDefaultTypeInternal _JsspOutputSolution_default_instance_;
class Machine;
class MachineDefaultTypeInternal;
extern MachineDefaultTypeInternal _Machine_default_instance_;
class Task;
class TaskDefaultTypeInternal;
extern TaskDefaultTypeInternal _Task_default_instance_;
class TransitionTimeMatrix;
class TransitionTimeMatrixDefaultTypeInternal;
extern TransitionTimeMatrixDefaultTypeInternal _TransitionTimeMatrix_default_instance_;
}  // namespace jssp
}  // namespace data
}  // namespace operations_research
namespace google {
namespace protobuf {
template<> ::operations_research::data::jssp::AssignedJob* Arena::CreateMaybeMessage<::operations_research::data::jssp::AssignedJob>(Arena*);
template<> ::operations_research::data::jssp::AssignedTask* Arena::CreateMaybeMessage<::operations_research::data::jssp::AssignedTask>(Arena*);
template<> ::operations_research::data::jssp::Job* Arena::CreateMaybeMessage<::operations_research::data::jssp::Job>(Arena*);
template<> ::operations_research::data::jssp::JobPrecedence* Arena::CreateMaybeMessage<::operations_research::data::jssp::JobPrecedence>(Arena*);
template<> ::operations_research::data::jssp::JsspInputProblem* Arena::CreateMaybeMessage<::operations_research::data::jssp::JsspInputProblem>(Arena*);
template<> ::operations_research::data::jssp::JsspOutputSolution* Arena::CreateMaybeMessage<::operations_research::data::jssp::JsspOutputSolution>(Arena*);
template<> ::operations_research::data::jssp::Machine* Arena::CreateMaybeMessage<::operations_research::data::jssp::Machine>(Arena*);
template<> ::operations_research::data::jssp::Task* Arena::CreateMaybeMessage<::operations_research::data::jssp::Task>(Arena*);
template<> ::operations_research::data::jssp::TransitionTimeMatrix* Arena::CreateMaybeMessage<::operations_research::data::jssp::TransitionTimeMatrix>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace operations_research {
namespace data {
namespace jssp {

// ===================================================================

class Task :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.data.jssp.Task) */ {
 public:
  Task();
  virtual ~Task();

  Task(const Task& from);

  inline Task& operator=(const Task& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Task(Task&& from) noexcept
    : Task() {
    *this = ::std::move(from);
  }

  inline Task& operator=(Task&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Task& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Task* internal_default_instance() {
    return reinterpret_cast<const Task*>(
               &_Task_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Task* other);
  friend void swap(Task& a, Task& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Task* New() const final {
    return CreateMaybeMessage<Task>(nullptr);
  }

  Task* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Task>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Task& from);
  void MergeFrom(const Task& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Task* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 machine = 1;
  int machine_size() const;
  void clear_machine();
  static const int kMachineFieldNumber = 1;
  ::google::protobuf::int32 machine(int index) const;
  void set_machine(int index, ::google::protobuf::int32 value);
  void add_machine(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      machine() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_machine();

  // repeated int64 duration = 2;
  int duration_size() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int64 duration(int index) const;
  void set_duration(int index, ::google::protobuf::int64 value);
  void add_duration(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      duration() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_duration();

  // repeated int64 cost = 3;
  int cost_size() const;
  void clear_cost();
  static const int kCostFieldNumber = 3;
  ::google::protobuf::int64 cost(int index) const;
  void set_cost(int index, ::google::protobuf::int64 value);
  void add_cost(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      cost() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_cost();

  // @@protoc_insertion_point(class_scope:operations_research.data.jssp.Task)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > machine_;
  mutable std::atomic<int> _machine_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > duration_;
  mutable std::atomic<int> _duration_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > cost_;
  mutable std::atomic<int> _cost_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto;
};
// -------------------------------------------------------------------

class Job :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.data.jssp.Job) */ {
 public:
  Job();
  virtual ~Job();

  Job(const Job& from);

  inline Job& operator=(const Job& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Job(Job&& from) noexcept
    : Job() {
    *this = ::std::move(from);
  }

  inline Job& operator=(Job&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Job& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Job* internal_default_instance() {
    return reinterpret_cast<const Job*>(
               &_Job_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Job* other);
  friend void swap(Job& a, Job& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Job* New() const final {
    return CreateMaybeMessage<Job>(nullptr);
  }

  Job* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Job>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Job& from);
  void MergeFrom(const Job& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Job* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .operations_research.data.jssp.Task tasks = 1;
  int tasks_size() const;
  void clear_tasks();
  static const int kTasksFieldNumber = 1;
  ::operations_research::data::jssp::Task* mutable_tasks(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Task >*
      mutable_tasks();
  const ::operations_research::data::jssp::Task& tasks(int index) const;
  ::operations_research::data::jssp::Task* add_tasks();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Task >&
      tasks() const;

  // string name = 16;
  void clear_name();
  static const int kNameFieldNumber = 16;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.protobuf.Int64Value earliest_start = 2;
  bool has_earliest_start() const;
  void clear_earliest_start();
  static const int kEarliestStartFieldNumber = 2;
  const ::google::protobuf::Int64Value& earliest_start() const;
  ::google::protobuf::Int64Value* release_earliest_start();
  ::google::protobuf::Int64Value* mutable_earliest_start();
  void set_allocated_earliest_start(::google::protobuf::Int64Value* earliest_start);

  // .google.protobuf.Int64Value latest_end = 7;
  bool has_latest_end() const;
  void clear_latest_end();
  static const int kLatestEndFieldNumber = 7;
  const ::google::protobuf::Int64Value& latest_end() const;
  ::google::protobuf::Int64Value* release_latest_end();
  ::google::protobuf::Int64Value* mutable_latest_end();
  void set_allocated_latest_end(::google::protobuf::Int64Value* latest_end);

  // int64 early_due_date = 3;
  void clear_early_due_date();
  static const int kEarlyDueDateFieldNumber = 3;
  ::google::protobuf::int64 early_due_date() const;
  void set_early_due_date(::google::protobuf::int64 value);

  // int64 late_due_date = 4;
  void clear_late_due_date();
  static const int kLateDueDateFieldNumber = 4;
  ::google::protobuf::int64 late_due_date() const;
  void set_late_due_date(::google::protobuf::int64 value);

  // int64 earliness_cost_per_time_unit = 5;
  void clear_earliness_cost_per_time_unit();
  static const int kEarlinessCostPerTimeUnitFieldNumber = 5;
  ::google::protobuf::int64 earliness_cost_per_time_unit() const;
  void set_earliness_cost_per_time_unit(::google::protobuf::int64 value);

  // int64 lateness_cost_per_time_unit = 6;
  void clear_lateness_cost_per_time_unit();
  static const int kLatenessCostPerTimeUnitFieldNumber = 6;
  ::google::protobuf::int64 lateness_cost_per_time_unit() const;
  void set_lateness_cost_per_time_unit(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:operations_research.data.jssp.Job)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Task > tasks_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::Int64Value* earliest_start_;
  ::google::protobuf::Int64Value* latest_end_;
  ::google::protobuf::int64 early_due_date_;
  ::google::protobuf::int64 late_due_date_;
  ::google::protobuf::int64 earliness_cost_per_time_unit_;
  ::google::protobuf::int64 lateness_cost_per_time_unit_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto;
};
// -------------------------------------------------------------------

class TransitionTimeMatrix :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.data.jssp.TransitionTimeMatrix) */ {
 public:
  TransitionTimeMatrix();
  virtual ~TransitionTimeMatrix();

  TransitionTimeMatrix(const TransitionTimeMatrix& from);

  inline TransitionTimeMatrix& operator=(const TransitionTimeMatrix& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitionTimeMatrix(TransitionTimeMatrix&& from) noexcept
    : TransitionTimeMatrix() {
    *this = ::std::move(from);
  }

  inline TransitionTimeMatrix& operator=(TransitionTimeMatrix&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransitionTimeMatrix& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitionTimeMatrix* internal_default_instance() {
    return reinterpret_cast<const TransitionTimeMatrix*>(
               &_TransitionTimeMatrix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(TransitionTimeMatrix* other);
  friend void swap(TransitionTimeMatrix& a, TransitionTimeMatrix& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitionTimeMatrix* New() const final {
    return CreateMaybeMessage<TransitionTimeMatrix>(nullptr);
  }

  TransitionTimeMatrix* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitionTimeMatrix>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitionTimeMatrix& from);
  void MergeFrom(const TransitionTimeMatrix& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitionTimeMatrix* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 transition_time = 1;
  int transition_time_size() const;
  void clear_transition_time();
  static const int kTransitionTimeFieldNumber = 1;
  ::google::protobuf::int64 transition_time(int index) const;
  void set_transition_time(int index, ::google::protobuf::int64 value);
  void add_transition_time(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      transition_time() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_transition_time();

  // @@protoc_insertion_point(class_scope:operations_research.data.jssp.TransitionTimeMatrix)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > transition_time_;
  mutable std::atomic<int> _transition_time_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto;
};
// -------------------------------------------------------------------

class Machine :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.data.jssp.Machine) */ {
 public:
  Machine();
  virtual ~Machine();

  Machine(const Machine& from);

  inline Machine& operator=(const Machine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Machine(Machine&& from) noexcept
    : Machine() {
    *this = ::std::move(from);
  }

  inline Machine& operator=(Machine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Machine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Machine* internal_default_instance() {
    return reinterpret_cast<const Machine*>(
               &_Machine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Machine* other);
  friend void swap(Machine& a, Machine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Machine* New() const final {
    return CreateMaybeMessage<Machine>(nullptr);
  }

  Machine* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Machine>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Machine& from);
  void MergeFrom(const Machine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Machine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 16;
  void clear_name();
  static const int kNameFieldNumber = 16;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .operations_research.data.jssp.TransitionTimeMatrix transition_time_matrix = 1;
  bool has_transition_time_matrix() const;
  void clear_transition_time_matrix();
  static const int kTransitionTimeMatrixFieldNumber = 1;
  const ::operations_research::data::jssp::TransitionTimeMatrix& transition_time_matrix() const;
  ::operations_research::data::jssp::TransitionTimeMatrix* release_transition_time_matrix();
  ::operations_research::data::jssp::TransitionTimeMatrix* mutable_transition_time_matrix();
  void set_allocated_transition_time_matrix(::operations_research::data::jssp::TransitionTimeMatrix* transition_time_matrix);

  // @@protoc_insertion_point(class_scope:operations_research.data.jssp.Machine)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::operations_research::data::jssp::TransitionTimeMatrix* transition_time_matrix_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto;
};
// -------------------------------------------------------------------

class JobPrecedence :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.data.jssp.JobPrecedence) */ {
 public:
  JobPrecedence();
  virtual ~JobPrecedence();

  JobPrecedence(const JobPrecedence& from);

  inline JobPrecedence& operator=(const JobPrecedence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JobPrecedence(JobPrecedence&& from) noexcept
    : JobPrecedence() {
    *this = ::std::move(from);
  }

  inline JobPrecedence& operator=(JobPrecedence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const JobPrecedence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobPrecedence* internal_default_instance() {
    return reinterpret_cast<const JobPrecedence*>(
               &_JobPrecedence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(JobPrecedence* other);
  friend void swap(JobPrecedence& a, JobPrecedence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JobPrecedence* New() const final {
    return CreateMaybeMessage<JobPrecedence>(nullptr);
  }

  JobPrecedence* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JobPrecedence>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JobPrecedence& from);
  void MergeFrom(const JobPrecedence& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobPrecedence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 first_job_index = 1;
  void clear_first_job_index();
  static const int kFirstJobIndexFieldNumber = 1;
  ::google::protobuf::int32 first_job_index() const;
  void set_first_job_index(::google::protobuf::int32 value);

  // int32 second_job_index = 2;
  void clear_second_job_index();
  static const int kSecondJobIndexFieldNumber = 2;
  ::google::protobuf::int32 second_job_index() const;
  void set_second_job_index(::google::protobuf::int32 value);

  // int64 min_delay = 3;
  void clear_min_delay();
  static const int kMinDelayFieldNumber = 3;
  ::google::protobuf::int64 min_delay() const;
  void set_min_delay(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:operations_research.data.jssp.JobPrecedence)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 first_job_index_;
  ::google::protobuf::int32 second_job_index_;
  ::google::protobuf::int64 min_delay_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto;
};
// -------------------------------------------------------------------

class JsspInputProblem :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.data.jssp.JsspInputProblem) */ {
 public:
  JsspInputProblem();
  virtual ~JsspInputProblem();

  JsspInputProblem(const JsspInputProblem& from);

  inline JsspInputProblem& operator=(const JsspInputProblem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JsspInputProblem(JsspInputProblem&& from) noexcept
    : JsspInputProblem() {
    *this = ::std::move(from);
  }

  inline JsspInputProblem& operator=(JsspInputProblem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const JsspInputProblem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JsspInputProblem* internal_default_instance() {
    return reinterpret_cast<const JsspInputProblem*>(
               &_JsspInputProblem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(JsspInputProblem* other);
  friend void swap(JsspInputProblem& a, JsspInputProblem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JsspInputProblem* New() const final {
    return CreateMaybeMessage<JsspInputProblem>(nullptr);
  }

  JsspInputProblem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JsspInputProblem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JsspInputProblem& from);
  void MergeFrom(const JsspInputProblem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JsspInputProblem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .operations_research.data.jssp.Job jobs = 1;
  int jobs_size() const;
  void clear_jobs();
  static const int kJobsFieldNumber = 1;
  ::operations_research::data::jssp::Job* mutable_jobs(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Job >*
      mutable_jobs();
  const ::operations_research::data::jssp::Job& jobs(int index) const;
  ::operations_research::data::jssp::Job* add_jobs();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Job >&
      jobs() const;

  // repeated .operations_research.data.jssp.Machine machines = 2;
  int machines_size() const;
  void clear_machines();
  static const int kMachinesFieldNumber = 2;
  ::operations_research::data::jssp::Machine* mutable_machines(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Machine >*
      mutable_machines();
  const ::operations_research::data::jssp::Machine& machines(int index) const;
  ::operations_research::data::jssp::Machine* add_machines();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Machine >&
      machines() const;

  // repeated .operations_research.data.jssp.JobPrecedence precedences = 3;
  int precedences_size() const;
  void clear_precedences();
  static const int kPrecedencesFieldNumber = 3;
  ::operations_research::data::jssp::JobPrecedence* mutable_precedences(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::JobPrecedence >*
      mutable_precedences();
  const ::operations_research::data::jssp::JobPrecedence& precedences(int index) const;
  ::operations_research::data::jssp::JobPrecedence* add_precedences();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::JobPrecedence >&
      precedences() const;

  // string name = 16;
  void clear_name();
  static const int kNameFieldNumber = 16;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.protobuf.DoubleValue scaling_factor = 5;
  bool has_scaling_factor() const;
  void clear_scaling_factor();
  static const int kScalingFactorFieldNumber = 5;
  const ::google::protobuf::DoubleValue& scaling_factor() const;
  ::google::protobuf::DoubleValue* release_scaling_factor();
  ::google::protobuf::DoubleValue* mutable_scaling_factor();
  void set_allocated_scaling_factor(::google::protobuf::DoubleValue* scaling_factor);

  // int64 makespan_cost_per_time_unit = 4;
  void clear_makespan_cost_per_time_unit();
  static const int kMakespanCostPerTimeUnitFieldNumber = 4;
  ::google::protobuf::int64 makespan_cost_per_time_unit() const;
  void set_makespan_cost_per_time_unit(::google::protobuf::int64 value);

  // int32 seed = 24;
  void clear_seed();
  static const int kSeedFieldNumber = 24;
  ::google::protobuf::int32 seed() const;
  void set_seed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:operations_research.data.jssp.JsspInputProblem)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Job > jobs_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Machine > machines_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::JobPrecedence > precedences_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::DoubleValue* scaling_factor_;
  ::google::protobuf::int64 makespan_cost_per_time_unit_;
  ::google::protobuf::int32 seed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto;
};
// -------------------------------------------------------------------

class AssignedTask :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.data.jssp.AssignedTask) */ {
 public:
  AssignedTask();
  virtual ~AssignedTask();

  AssignedTask(const AssignedTask& from);

  inline AssignedTask& operator=(const AssignedTask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AssignedTask(AssignedTask&& from) noexcept
    : AssignedTask() {
    *this = ::std::move(from);
  }

  inline AssignedTask& operator=(AssignedTask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AssignedTask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AssignedTask* internal_default_instance() {
    return reinterpret_cast<const AssignedTask*>(
               &_AssignedTask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(AssignedTask* other);
  friend void swap(AssignedTask& a, AssignedTask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AssignedTask* New() const final {
    return CreateMaybeMessage<AssignedTask>(nullptr);
  }

  AssignedTask* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AssignedTask>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AssignedTask& from);
  void MergeFrom(const AssignedTask& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AssignedTask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 start_time = 2;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  ::google::protobuf::int64 start_time() const;
  void set_start_time(::google::protobuf::int64 value);

  // int32 alternative_index = 1;
  void clear_alternative_index();
  static const int kAlternativeIndexFieldNumber = 1;
  ::google::protobuf::int32 alternative_index() const;
  void set_alternative_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:operations_research.data.jssp.AssignedTask)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int32 alternative_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto;
};
// -------------------------------------------------------------------

class AssignedJob :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.data.jssp.AssignedJob) */ {
 public:
  AssignedJob();
  virtual ~AssignedJob();

  AssignedJob(const AssignedJob& from);

  inline AssignedJob& operator=(const AssignedJob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AssignedJob(AssignedJob&& from) noexcept
    : AssignedJob() {
    *this = ::std::move(from);
  }

  inline AssignedJob& operator=(AssignedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AssignedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AssignedJob* internal_default_instance() {
    return reinterpret_cast<const AssignedJob*>(
               &_AssignedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(AssignedJob* other);
  friend void swap(AssignedJob& a, AssignedJob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AssignedJob* New() const final {
    return CreateMaybeMessage<AssignedJob>(nullptr);
  }

  AssignedJob* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AssignedJob>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AssignedJob& from);
  void MergeFrom(const AssignedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AssignedJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .operations_research.data.jssp.AssignedTask tasks = 1;
  int tasks_size() const;
  void clear_tasks();
  static const int kTasksFieldNumber = 1;
  ::operations_research::data::jssp::AssignedTask* mutable_tasks(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedTask >*
      mutable_tasks();
  const ::operations_research::data::jssp::AssignedTask& tasks(int index) const;
  ::operations_research::data::jssp::AssignedTask* add_tasks();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedTask >&
      tasks() const;

  // int64 due_date_cost = 2;
  void clear_due_date_cost();
  static const int kDueDateCostFieldNumber = 2;
  ::google::protobuf::int64 due_date_cost() const;
  void set_due_date_cost(::google::protobuf::int64 value);

  // int64 sum_of_task_costs = 3;
  void clear_sum_of_task_costs();
  static const int kSumOfTaskCostsFieldNumber = 3;
  ::google::protobuf::int64 sum_of_task_costs() const;
  void set_sum_of_task_costs(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:operations_research.data.jssp.AssignedJob)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedTask > tasks_;
  ::google::protobuf::int64 due_date_cost_;
  ::google::protobuf::int64 sum_of_task_costs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto;
};
// -------------------------------------------------------------------

class JsspOutputSolution :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.data.jssp.JsspOutputSolution) */ {
 public:
  JsspOutputSolution();
  virtual ~JsspOutputSolution();

  JsspOutputSolution(const JsspOutputSolution& from);

  inline JsspOutputSolution& operator=(const JsspOutputSolution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JsspOutputSolution(JsspOutputSolution&& from) noexcept
    : JsspOutputSolution() {
    *this = ::std::move(from);
  }

  inline JsspOutputSolution& operator=(JsspOutputSolution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const JsspOutputSolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JsspOutputSolution* internal_default_instance() {
    return reinterpret_cast<const JsspOutputSolution*>(
               &_JsspOutputSolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(JsspOutputSolution* other);
  friend void swap(JsspOutputSolution& a, JsspOutputSolution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JsspOutputSolution* New() const final {
    return CreateMaybeMessage<JsspOutputSolution>(nullptr);
  }

  JsspOutputSolution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JsspOutputSolution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JsspOutputSolution& from);
  void MergeFrom(const JsspOutputSolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JsspOutputSolution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .operations_research.data.jssp.AssignedJob jobs = 1;
  int jobs_size() const;
  void clear_jobs();
  static const int kJobsFieldNumber = 1;
  ::operations_research::data::jssp::AssignedJob* mutable_jobs(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedJob >*
      mutable_jobs();
  const ::operations_research::data::jssp::AssignedJob& jobs(int index) const;
  ::operations_research::data::jssp::AssignedJob* add_jobs();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedJob >&
      jobs() const;

  // int64 makespan_cost = 2;
  void clear_makespan_cost();
  static const int kMakespanCostFieldNumber = 2;
  ::google::protobuf::int64 makespan_cost() const;
  void set_makespan_cost(::google::protobuf::int64 value);

  // int64 total_cost = 3;
  void clear_total_cost();
  static const int kTotalCostFieldNumber = 3;
  ::google::protobuf::int64 total_cost() const;
  void set_total_cost(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:operations_research.data.jssp.JsspOutputSolution)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedJob > jobs_;
  ::google::protobuf::int64 makespan_cost_;
  ::google::protobuf::int64 total_cost_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ortools_2fdata_2fjobshop_5fscheduling_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Task

// repeated int32 machine = 1;
inline int Task::machine_size() const {
  return machine_.size();
}
inline void Task::clear_machine() {
  machine_.Clear();
}
inline ::google::protobuf::int32 Task::machine(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Task.machine)
  return machine_.Get(index);
}
inline void Task::set_machine(int index, ::google::protobuf::int32 value) {
  machine_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.Task.machine)
}
inline void Task::add_machine(::google::protobuf::int32 value) {
  machine_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.Task.machine)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Task::machine() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.Task.machine)
  return machine_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Task::mutable_machine() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.Task.machine)
  return &machine_;
}

// repeated int64 duration = 2;
inline int Task::duration_size() const {
  return duration_.size();
}
inline void Task::clear_duration() {
  duration_.Clear();
}
inline ::google::protobuf::int64 Task::duration(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Task.duration)
  return duration_.Get(index);
}
inline void Task::set_duration(int index, ::google::protobuf::int64 value) {
  duration_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.Task.duration)
}
inline void Task::add_duration(::google::protobuf::int64 value) {
  duration_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.Task.duration)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Task::duration() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.Task.duration)
  return duration_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Task::mutable_duration() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.Task.duration)
  return &duration_;
}

// repeated int64 cost = 3;
inline int Task::cost_size() const {
  return cost_.size();
}
inline void Task::clear_cost() {
  cost_.Clear();
}
inline ::google::protobuf::int64 Task::cost(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Task.cost)
  return cost_.Get(index);
}
inline void Task::set_cost(int index, ::google::protobuf::int64 value) {
  cost_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.Task.cost)
}
inline void Task::add_cost(::google::protobuf::int64 value) {
  cost_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.Task.cost)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Task::cost() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.Task.cost)
  return cost_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Task::mutable_cost() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.Task.cost)
  return &cost_;
}

// -------------------------------------------------------------------

// Job

// repeated .operations_research.data.jssp.Task tasks = 1;
inline int Job::tasks_size() const {
  return tasks_.size();
}
inline void Job::clear_tasks() {
  tasks_.Clear();
}
inline ::operations_research::data::jssp::Task* Job::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.Job.tasks)
  return tasks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Task >*
Job::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.Job.tasks)
  return &tasks_;
}
inline const ::operations_research::data::jssp::Task& Job::tasks(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Job.tasks)
  return tasks_.Get(index);
}
inline ::operations_research::data::jssp::Task* Job::add_tasks() {
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.Job.tasks)
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Task >&
Job::tasks() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.Job.tasks)
  return tasks_;
}

// .google.protobuf.Int64Value earliest_start = 2;
inline bool Job::has_earliest_start() const {
  return this != internal_default_instance() && earliest_start_ != nullptr;
}
inline const ::google::protobuf::Int64Value& Job::earliest_start() const {
  const ::google::protobuf::Int64Value* p = earliest_start_;
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Job.earliest_start)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Job::release_earliest_start() {
  // @@protoc_insertion_point(field_release:operations_research.data.jssp.Job.earliest_start)
  
  ::google::protobuf::Int64Value* temp = earliest_start_;
  earliest_start_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* Job::mutable_earliest_start() {
  
  if (earliest_start_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    earliest_start_ = p;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.Job.earliest_start)
  return earliest_start_;
}
inline void Job::set_allocated_earliest_start(::google::protobuf::Int64Value* earliest_start) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(earliest_start_);
  }
  if (earliest_start) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(earliest_start)->GetArena();
    if (message_arena != submessage_arena) {
      earliest_start = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, earliest_start, submessage_arena);
    }
    
  } else {
    
  }
  earliest_start_ = earliest_start;
  // @@protoc_insertion_point(field_set_allocated:operations_research.data.jssp.Job.earliest_start)
}

// int64 early_due_date = 3;
inline void Job::clear_early_due_date() {
  early_due_date_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Job::early_due_date() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Job.early_due_date)
  return early_due_date_;
}
inline void Job::set_early_due_date(::google::protobuf::int64 value) {
  
  early_due_date_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.Job.early_due_date)
}

// int64 late_due_date = 4;
inline void Job::clear_late_due_date() {
  late_due_date_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Job::late_due_date() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Job.late_due_date)
  return late_due_date_;
}
inline void Job::set_late_due_date(::google::protobuf::int64 value) {
  
  late_due_date_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.Job.late_due_date)
}

// int64 earliness_cost_per_time_unit = 5;
inline void Job::clear_earliness_cost_per_time_unit() {
  earliness_cost_per_time_unit_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Job::earliness_cost_per_time_unit() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Job.earliness_cost_per_time_unit)
  return earliness_cost_per_time_unit_;
}
inline void Job::set_earliness_cost_per_time_unit(::google::protobuf::int64 value) {
  
  earliness_cost_per_time_unit_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.Job.earliness_cost_per_time_unit)
}

// int64 lateness_cost_per_time_unit = 6;
inline void Job::clear_lateness_cost_per_time_unit() {
  lateness_cost_per_time_unit_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Job::lateness_cost_per_time_unit() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Job.lateness_cost_per_time_unit)
  return lateness_cost_per_time_unit_;
}
inline void Job::set_lateness_cost_per_time_unit(::google::protobuf::int64 value) {
  
  lateness_cost_per_time_unit_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.Job.lateness_cost_per_time_unit)
}

// .google.protobuf.Int64Value latest_end = 7;
inline bool Job::has_latest_end() const {
  return this != internal_default_instance() && latest_end_ != nullptr;
}
inline const ::google::protobuf::Int64Value& Job::latest_end() const {
  const ::google::protobuf::Int64Value* p = latest_end_;
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Job.latest_end)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Job::release_latest_end() {
  // @@protoc_insertion_point(field_release:operations_research.data.jssp.Job.latest_end)
  
  ::google::protobuf::Int64Value* temp = latest_end_;
  latest_end_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* Job::mutable_latest_end() {
  
  if (latest_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    latest_end_ = p;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.Job.latest_end)
  return latest_end_;
}
inline void Job::set_allocated_latest_end(::google::protobuf::Int64Value* latest_end) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(latest_end_);
  }
  if (latest_end) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(latest_end)->GetArena();
    if (message_arena != submessage_arena) {
      latest_end = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, latest_end, submessage_arena);
    }
    
  } else {
    
  }
  latest_end_ = latest_end;
  // @@protoc_insertion_point(field_set_allocated:operations_research.data.jssp.Job.latest_end)
}

// string name = 16;
inline void Job::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job::name() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Job.name)
  return name_.GetNoArena();
}
inline void Job::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.Job.name)
}
#if LANG_CXX11
inline void Job::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:operations_research.data.jssp.Job.name)
}
#endif
inline void Job::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:operations_research.data.jssp.Job.name)
}
inline void Job::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:operations_research.data.jssp.Job.name)
}
inline ::std::string* Job::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.Job.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job::release_name() {
  // @@protoc_insertion_point(field_release:operations_research.data.jssp.Job.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:operations_research.data.jssp.Job.name)
}

// -------------------------------------------------------------------

// TransitionTimeMatrix

// repeated int64 transition_time = 1;
inline int TransitionTimeMatrix::transition_time_size() const {
  return transition_time_.size();
}
inline void TransitionTimeMatrix::clear_transition_time() {
  transition_time_.Clear();
}
inline ::google::protobuf::int64 TransitionTimeMatrix::transition_time(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.TransitionTimeMatrix.transition_time)
  return transition_time_.Get(index);
}
inline void TransitionTimeMatrix::set_transition_time(int index, ::google::protobuf::int64 value) {
  transition_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.TransitionTimeMatrix.transition_time)
}
inline void TransitionTimeMatrix::add_transition_time(::google::protobuf::int64 value) {
  transition_time_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.TransitionTimeMatrix.transition_time)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TransitionTimeMatrix::transition_time() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.TransitionTimeMatrix.transition_time)
  return transition_time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TransitionTimeMatrix::mutable_transition_time() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.TransitionTimeMatrix.transition_time)
  return &transition_time_;
}

// -------------------------------------------------------------------

// Machine

// .operations_research.data.jssp.TransitionTimeMatrix transition_time_matrix = 1;
inline bool Machine::has_transition_time_matrix() const {
  return this != internal_default_instance() && transition_time_matrix_ != nullptr;
}
inline void Machine::clear_transition_time_matrix() {
  if (GetArenaNoVirtual() == nullptr && transition_time_matrix_ != nullptr) {
    delete transition_time_matrix_;
  }
  transition_time_matrix_ = nullptr;
}
inline const ::operations_research::data::jssp::TransitionTimeMatrix& Machine::transition_time_matrix() const {
  const ::operations_research::data::jssp::TransitionTimeMatrix* p = transition_time_matrix_;
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Machine.transition_time_matrix)
  return p != nullptr ? *p : *reinterpret_cast<const ::operations_research::data::jssp::TransitionTimeMatrix*>(
      &::operations_research::data::jssp::_TransitionTimeMatrix_default_instance_);
}
inline ::operations_research::data::jssp::TransitionTimeMatrix* Machine::release_transition_time_matrix() {
  // @@protoc_insertion_point(field_release:operations_research.data.jssp.Machine.transition_time_matrix)
  
  ::operations_research::data::jssp::TransitionTimeMatrix* temp = transition_time_matrix_;
  transition_time_matrix_ = nullptr;
  return temp;
}
inline ::operations_research::data::jssp::TransitionTimeMatrix* Machine::mutable_transition_time_matrix() {
  
  if (transition_time_matrix_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::data::jssp::TransitionTimeMatrix>(GetArenaNoVirtual());
    transition_time_matrix_ = p;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.Machine.transition_time_matrix)
  return transition_time_matrix_;
}
inline void Machine::set_allocated_transition_time_matrix(::operations_research::data::jssp::TransitionTimeMatrix* transition_time_matrix) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete transition_time_matrix_;
  }
  if (transition_time_matrix) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      transition_time_matrix = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transition_time_matrix, submessage_arena);
    }
    
  } else {
    
  }
  transition_time_matrix_ = transition_time_matrix;
  // @@protoc_insertion_point(field_set_allocated:operations_research.data.jssp.Machine.transition_time_matrix)
}

// string name = 16;
inline void Machine::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Machine::name() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.Machine.name)
  return name_.GetNoArena();
}
inline void Machine::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.Machine.name)
}
#if LANG_CXX11
inline void Machine::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:operations_research.data.jssp.Machine.name)
}
#endif
inline void Machine::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:operations_research.data.jssp.Machine.name)
}
inline void Machine::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:operations_research.data.jssp.Machine.name)
}
inline ::std::string* Machine::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.Machine.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Machine::release_name() {
  // @@protoc_insertion_point(field_release:operations_research.data.jssp.Machine.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Machine::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:operations_research.data.jssp.Machine.name)
}

// -------------------------------------------------------------------

// JobPrecedence

// int32 first_job_index = 1;
inline void JobPrecedence::clear_first_job_index() {
  first_job_index_ = 0;
}
inline ::google::protobuf::int32 JobPrecedence::first_job_index() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JobPrecedence.first_job_index)
  return first_job_index_;
}
inline void JobPrecedence::set_first_job_index(::google::protobuf::int32 value) {
  
  first_job_index_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.JobPrecedence.first_job_index)
}

// int32 second_job_index = 2;
inline void JobPrecedence::clear_second_job_index() {
  second_job_index_ = 0;
}
inline ::google::protobuf::int32 JobPrecedence::second_job_index() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JobPrecedence.second_job_index)
  return second_job_index_;
}
inline void JobPrecedence::set_second_job_index(::google::protobuf::int32 value) {
  
  second_job_index_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.JobPrecedence.second_job_index)
}

// int64 min_delay = 3;
inline void JobPrecedence::clear_min_delay() {
  min_delay_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 JobPrecedence::min_delay() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JobPrecedence.min_delay)
  return min_delay_;
}
inline void JobPrecedence::set_min_delay(::google::protobuf::int64 value) {
  
  min_delay_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.JobPrecedence.min_delay)
}

// -------------------------------------------------------------------

// JsspInputProblem

// repeated .operations_research.data.jssp.Job jobs = 1;
inline int JsspInputProblem::jobs_size() const {
  return jobs_.size();
}
inline void JsspInputProblem::clear_jobs() {
  jobs_.Clear();
}
inline ::operations_research::data::jssp::Job* JsspInputProblem::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.JsspInputProblem.jobs)
  return jobs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Job >*
JsspInputProblem::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.JsspInputProblem.jobs)
  return &jobs_;
}
inline const ::operations_research::data::jssp::Job& JsspInputProblem::jobs(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspInputProblem.jobs)
  return jobs_.Get(index);
}
inline ::operations_research::data::jssp::Job* JsspInputProblem::add_jobs() {
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.JsspInputProblem.jobs)
  return jobs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Job >&
JsspInputProblem::jobs() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.JsspInputProblem.jobs)
  return jobs_;
}

// repeated .operations_research.data.jssp.Machine machines = 2;
inline int JsspInputProblem::machines_size() const {
  return machines_.size();
}
inline void JsspInputProblem::clear_machines() {
  machines_.Clear();
}
inline ::operations_research::data::jssp::Machine* JsspInputProblem::mutable_machines(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.JsspInputProblem.machines)
  return machines_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Machine >*
JsspInputProblem::mutable_machines() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.JsspInputProblem.machines)
  return &machines_;
}
inline const ::operations_research::data::jssp::Machine& JsspInputProblem::machines(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspInputProblem.machines)
  return machines_.Get(index);
}
inline ::operations_research::data::jssp::Machine* JsspInputProblem::add_machines() {
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.JsspInputProblem.machines)
  return machines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::Machine >&
JsspInputProblem::machines() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.JsspInputProblem.machines)
  return machines_;
}

// repeated .operations_research.data.jssp.JobPrecedence precedences = 3;
inline int JsspInputProblem::precedences_size() const {
  return precedences_.size();
}
inline void JsspInputProblem::clear_precedences() {
  precedences_.Clear();
}
inline ::operations_research::data::jssp::JobPrecedence* JsspInputProblem::mutable_precedences(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.JsspInputProblem.precedences)
  return precedences_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::JobPrecedence >*
JsspInputProblem::mutable_precedences() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.JsspInputProblem.precedences)
  return &precedences_;
}
inline const ::operations_research::data::jssp::JobPrecedence& JsspInputProblem::precedences(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspInputProblem.precedences)
  return precedences_.Get(index);
}
inline ::operations_research::data::jssp::JobPrecedence* JsspInputProblem::add_precedences() {
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.JsspInputProblem.precedences)
  return precedences_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::JobPrecedence >&
JsspInputProblem::precedences() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.JsspInputProblem.precedences)
  return precedences_;
}

// int64 makespan_cost_per_time_unit = 4;
inline void JsspInputProblem::clear_makespan_cost_per_time_unit() {
  makespan_cost_per_time_unit_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 JsspInputProblem::makespan_cost_per_time_unit() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspInputProblem.makespan_cost_per_time_unit)
  return makespan_cost_per_time_unit_;
}
inline void JsspInputProblem::set_makespan_cost_per_time_unit(::google::protobuf::int64 value) {
  
  makespan_cost_per_time_unit_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.JsspInputProblem.makespan_cost_per_time_unit)
}

// .google.protobuf.DoubleValue scaling_factor = 5;
inline bool JsspInputProblem::has_scaling_factor() const {
  return this != internal_default_instance() && scaling_factor_ != nullptr;
}
inline const ::google::protobuf::DoubleValue& JsspInputProblem::scaling_factor() const {
  const ::google::protobuf::DoubleValue* p = scaling_factor_;
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspInputProblem.scaling_factor)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* JsspInputProblem::release_scaling_factor() {
  // @@protoc_insertion_point(field_release:operations_research.data.jssp.JsspInputProblem.scaling_factor)
  
  ::google::protobuf::DoubleValue* temp = scaling_factor_;
  scaling_factor_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* JsspInputProblem::mutable_scaling_factor() {
  
  if (scaling_factor_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::DoubleValue>(GetArenaNoVirtual());
    scaling_factor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.JsspInputProblem.scaling_factor)
  return scaling_factor_;
}
inline void JsspInputProblem::set_allocated_scaling_factor(::google::protobuf::DoubleValue* scaling_factor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scaling_factor_);
  }
  if (scaling_factor) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(scaling_factor)->GetArena();
    if (message_arena != submessage_arena) {
      scaling_factor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scaling_factor, submessage_arena);
    }
    
  } else {
    
  }
  scaling_factor_ = scaling_factor;
  // @@protoc_insertion_point(field_set_allocated:operations_research.data.jssp.JsspInputProblem.scaling_factor)
}

// int32 seed = 24;
inline void JsspInputProblem::clear_seed() {
  seed_ = 0;
}
inline ::google::protobuf::int32 JsspInputProblem::seed() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspInputProblem.seed)
  return seed_;
}
inline void JsspInputProblem::set_seed(::google::protobuf::int32 value) {
  
  seed_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.JsspInputProblem.seed)
}

// string name = 16;
inline void JsspInputProblem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JsspInputProblem::name() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspInputProblem.name)
  return name_.GetNoArena();
}
inline void JsspInputProblem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.JsspInputProblem.name)
}
#if LANG_CXX11
inline void JsspInputProblem::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:operations_research.data.jssp.JsspInputProblem.name)
}
#endif
inline void JsspInputProblem::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:operations_research.data.jssp.JsspInputProblem.name)
}
inline void JsspInputProblem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:operations_research.data.jssp.JsspInputProblem.name)
}
inline ::std::string* JsspInputProblem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.JsspInputProblem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JsspInputProblem::release_name() {
  // @@protoc_insertion_point(field_release:operations_research.data.jssp.JsspInputProblem.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JsspInputProblem::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:operations_research.data.jssp.JsspInputProblem.name)
}

// -------------------------------------------------------------------

// AssignedTask

// int32 alternative_index = 1;
inline void AssignedTask::clear_alternative_index() {
  alternative_index_ = 0;
}
inline ::google::protobuf::int32 AssignedTask::alternative_index() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.AssignedTask.alternative_index)
  return alternative_index_;
}
inline void AssignedTask::set_alternative_index(::google::protobuf::int32 value) {
  
  alternative_index_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.AssignedTask.alternative_index)
}

// int64 start_time = 2;
inline void AssignedTask::clear_start_time() {
  start_time_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 AssignedTask::start_time() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.AssignedTask.start_time)
  return start_time_;
}
inline void AssignedTask::set_start_time(::google::protobuf::int64 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.AssignedTask.start_time)
}

// -------------------------------------------------------------------

// AssignedJob

// repeated .operations_research.data.jssp.AssignedTask tasks = 1;
inline int AssignedJob::tasks_size() const {
  return tasks_.size();
}
inline void AssignedJob::clear_tasks() {
  tasks_.Clear();
}
inline ::operations_research::data::jssp::AssignedTask* AssignedJob::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.AssignedJob.tasks)
  return tasks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedTask >*
AssignedJob::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.AssignedJob.tasks)
  return &tasks_;
}
inline const ::operations_research::data::jssp::AssignedTask& AssignedJob::tasks(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.AssignedJob.tasks)
  return tasks_.Get(index);
}
inline ::operations_research::data::jssp::AssignedTask* AssignedJob::add_tasks() {
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.AssignedJob.tasks)
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedTask >&
AssignedJob::tasks() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.AssignedJob.tasks)
  return tasks_;
}

// int64 due_date_cost = 2;
inline void AssignedJob::clear_due_date_cost() {
  due_date_cost_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 AssignedJob::due_date_cost() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.AssignedJob.due_date_cost)
  return due_date_cost_;
}
inline void AssignedJob::set_due_date_cost(::google::protobuf::int64 value) {
  
  due_date_cost_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.AssignedJob.due_date_cost)
}

// int64 sum_of_task_costs = 3;
inline void AssignedJob::clear_sum_of_task_costs() {
  sum_of_task_costs_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 AssignedJob::sum_of_task_costs() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.AssignedJob.sum_of_task_costs)
  return sum_of_task_costs_;
}
inline void AssignedJob::set_sum_of_task_costs(::google::protobuf::int64 value) {
  
  sum_of_task_costs_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.AssignedJob.sum_of_task_costs)
}

// -------------------------------------------------------------------

// JsspOutputSolution

// repeated .operations_research.data.jssp.AssignedJob jobs = 1;
inline int JsspOutputSolution::jobs_size() const {
  return jobs_.size();
}
inline void JsspOutputSolution::clear_jobs() {
  jobs_.Clear();
}
inline ::operations_research::data::jssp::AssignedJob* JsspOutputSolution::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.data.jssp.JsspOutputSolution.jobs)
  return jobs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedJob >*
JsspOutputSolution::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.data.jssp.JsspOutputSolution.jobs)
  return &jobs_;
}
inline const ::operations_research::data::jssp::AssignedJob& JsspOutputSolution::jobs(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspOutputSolution.jobs)
  return jobs_.Get(index);
}
inline ::operations_research::data::jssp::AssignedJob* JsspOutputSolution::add_jobs() {
  // @@protoc_insertion_point(field_add:operations_research.data.jssp.JsspOutputSolution.jobs)
  return jobs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::data::jssp::AssignedJob >&
JsspOutputSolution::jobs() const {
  // @@protoc_insertion_point(field_list:operations_research.data.jssp.JsspOutputSolution.jobs)
  return jobs_;
}

// int64 makespan_cost = 2;
inline void JsspOutputSolution::clear_makespan_cost() {
  makespan_cost_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 JsspOutputSolution::makespan_cost() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspOutputSolution.makespan_cost)
  return makespan_cost_;
}
inline void JsspOutputSolution::set_makespan_cost(::google::protobuf::int64 value) {
  
  makespan_cost_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.JsspOutputSolution.makespan_cost)
}

// int64 total_cost = 3;
inline void JsspOutputSolution::clear_total_cost() {
  total_cost_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 JsspOutputSolution::total_cost() const {
  // @@protoc_insertion_point(field_get:operations_research.data.jssp.JsspOutputSolution.total_cost)
  return total_cost_;
}
inline void JsspOutputSolution::set_total_cost(::google::protobuf::int64 value) {
  
  total_cost_ = value;
  // @@protoc_insertion_point(field_set:operations_research.data.jssp.JsspOutputSolution.total_cost)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace jssp
}  // namespace data
}  // namespace operations_research

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_ortools_2fdata_2fjobshop_5fscheduling_2eproto
